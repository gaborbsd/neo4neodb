apply plugin: 'war'

sourceCompatibility = 1.7

ext.slf4jVersion 		= '1.7.5'
ext.logbackClassicVersion 	= '1.0.13'
ext.cglibNodepVersion 		= '2.2.2'
ext.servletApiVersion 		= '3.0.1'
ext.hibernateValidatorVersion 	= '5.0.1.Final'
ext.groovyVersion 		= '2.1.6'
ext.velocityVersion 		= '1.7'

ext.springVersion               = '3.2.3.RELEASE'
ext.neo4jVersion                = '1.9.1'
ext.springSecurityVersion       = '3.2.0.M2'

ext.sdCommonsVersion		= '1.6.0.BUILD-SNAPSHOT'
ext.sdNeo4jVersion 		= '2.3.0.BUILD-SNAPSHOT'
ext.sdRestVersion 		= '2.0.0.BUILD-SNAPSHOT'
ext.springHateoasVersion	= '0.8.0.BUILD-SNAPSHOT'

ext.junitVersion	=	'4.11'

task wrapper(type: Wrapper) {
    gradleVersion = '1.6'
}

repositories {
    mavenCentral()
    maven { url "http://repo.springsource.org/libs-snapshot" }
    maven { url "http://repo.springsource.org/snapshot" }
    maven { url "http://repo.springsource.org/milestone" }
    maven { url "http://m2.neo4j.org/" }


}


configurations {
    integrationTestCompile {
        extendsFrom testCompile
    }
    integrationTestRuntime {
        extendsFrom integrationTestCompile, testRuntime
    }
    ['commons-logging', 'log4j'].each { groupName -> all*.exclude group: groupName }
}

dependencies {

    providedCompile "javax.servlet:javax.servlet-api:$servletApiVersion"

    compile "org.springframework:spring-webmvc:$springVersion",
            "org.springframework:spring-jdbc:$springVersion",
            "org.springframework:spring-aspects:$springVersion",
            "org.springframework:spring-context-support:$springVersion",
            "org.springframework:spring-test:$springVersion",
            "org.slf4j:slf4j-api:$slf4jVersion",
            "org.slf4j:log4j-over-slf4j:$slf4jVersion",
            "org.slf4j:jul-to-slf4j:$slf4jVersion",
            "org.slf4j:jcl-over-slf4j:$slf4jVersion",
            "org.springframework.data:spring-data-neo4j:$sdNeo4jVersion",
            "org.springframework.data:spring-data-neo4j-rest:$sdNeo4jVersion",
            "org.springframework.data:spring-data-rest-webmvc:$sdRestVersion",
            "org.springframework.data:spring-data-commons:$sdCommonsVersion",
            "org.springframework.security:spring-security-config:$springSecurityVersion",
            "org.springframework.hateoas:spring-hateoas:$springHateoasVersion",
            "org.neo4j:neo4j:$neo4jVersion",
            "org.hibernate:hibernate-validator:$hibernateValidatorVersion",
            "org.apache.velocity:velocity:$velocityVersion",
            "junit:junit:$junitVersion"

    runtime "cglib:cglib-nodep:$cglibNodepVersion",
            "ch.qos.logback:logback-classic:$logbackClassicVersion",
	    "org.codehaus.groovy:groovy:$groovyVersion"
	

}



configurations { jetty9 }

repositories.mavenCentral()

dependencies.jetty9 'org.eclipse.jetty:jetty-ant:9.0.4.v20130625'
 
ant {
	taskdef(name: 'jettyRun', classname: 'org.eclipse.jetty.ant.JettyRunTask', classpath: configurations.jetty9.asPath)
	taskdef(name: 'jettyStop', classname: 'org.eclipse.jetty.ant.JettyStopTask', classpath: configurations.jetty9.asPath)
}
 
project.ext {
	contextPath = '/'
	port = 8080
	stopPort = stopKey = 9999
}
 
task jettyRun {
    logging.level = LogLevel.INFO
} << {
	ant.jettyRun(jettyPort: project.ext.port, scanIntervalSeconds: 3) {
		webApp(war: webAppDir, contextPath: project.ext.contextPath, extraClasspath: configurations.compile.asPath)
	}
}
 
task jettyRunWar(dependsOn: war) {
    logging.level = LogLevel.INFO
}<< {
	ant.jettyRun(jettyPort: project.ext.port) {
		webApp(war: war.archivePath, contextPath: project.ext.contextPath)
	}
}
 
task jettyStart(dependsOn: war) << {
	ant.jettyRun(daemon: true, jettyPort: project.ext.port, stopPort: project.ext.stopPort, stopKey: project.ext.stopKey) {
		webApp(war: war.archivePath, contextPath: project.ext.contextPath)
	}
}
 
task jettyStop << {
	ant.jettyStop(stopWait: 1, stopPort: project.ext.stopPort, stopKey: project.ext.stopKey)
}
